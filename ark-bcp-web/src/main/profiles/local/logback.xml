<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <property name="dateFormat" value="yyyy-MM-dd-HH"/>
    <property name="max.history" value="0"/>
    <property name="never.block" value="true"/>
    <property name="queue.size" value="1024"/>
    <property name="discarding.threshold" value="0"/>
    <property name="include.caller.data" value="true"/>
    <property name="caller.depth" value="0"/>
    <property name="ex.depth" value="full"/>
    <property name="total.size.cap" value="140GB"/>

    <property resource="as-frame.properties"/> <!-- as-frame first -->

    <property name="logBasePath" value="/data/logs/${appname}"/>

    <conversionRule conversionWord="prefix" converterClass="com.missfresh.as.log.converter.PrefixConvert"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder charset="UTF-8">
            <Pattern>%prefix %X{traceid} %X{traceUrl} %X{rpcid} %X{logid} pRpcid[%X{pRpcid}] %X{url}
                %caller{${caller.depth}} %ex{${ex.depth}} %.-1048000m \n</Pattern>　
            <immediateFlush>true</immediateFlush>　　　
        </encoder>
    </appender>

    <!-- debug 日志-->
    <appender name="DEBUG-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logBasePath}/${appname}.log.debug</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logBasePath}/${appname}.log.debug.%d{${dateFormat}}</fileNamePattern>
            <MaxHistory>${max.history}</MaxHistory>
            <totalSizeCap>${total.size.cap}</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder charset="UTF-8">
            <Pattern>%prefix %X{traceid} %X{traceUrl} %X{rpcid} %X{logid} pRpcid[%X{pRpcid}] %X{url}
                %caller{${caller.depth}} %ex{${ex.depth}} %.-1048000m \n
            </Pattern>
        </encoder>
    </appender>
    <appender name="ASYNC-DEBUG-APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>${discarding.threshold}</discardingThreshold>
        <queueSize>${queue.size}</queueSize>
        <includeCallerData>${include.caller.data}</includeCallerData>
        <neverBlock>${never.block}</neverBlock>
        <appender-ref ref="DEBUG-APPENDER"/>
    </appender>

    <!-- info 日志-->
    <appender name="INFO-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logBasePath}/${appname}.log.info</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logBasePath}/${appname}.log.info.%d{${dateFormat}}</fileNamePattern>
            <MaxHistory>${max.history}</MaxHistory>
            <totalSizeCap>${total.size.cap}</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder charset="UTF-8">
            <Pattern>%prefix %X{traceid} %X{traceUrl} %X{rpcid} %X{logid} pRpcid[%X{pRpcid}] %X{url}
                %caller{${caller.depth}} %ex{${ex.depth}} %.-1048000m \n</Pattern>　　　　
        </encoder>
    </appender>

    <appender name="ASYNC-INFO-APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>${discarding.threshold}</discardingThreshold>
        <queueSize>${queue.size}</queueSize>
        <includeCallerData>${include.caller.data}</includeCallerData>
        <neverBlock>${never.block}</neverBlock>
        <appender-ref ref="INFO-APPENDER"/>
    </appender>

    <!-- monitor 日志-->
    <appender name="MONITOR-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logBasePath}/${appname}.log.monitor</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logBasePath}/${appname}.log.monitor.%d{${dateFormat}}</fileNamePattern>
            <MaxHistory>24</MaxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder charset="UTF-8">
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %m \n</Pattern>
        </encoder>
    </appender>

    <appender name="ASYNC-MONITOR-APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>${discarding.threshold}</discardingThreshold>
        <queueSize>${queue.size}</queueSize>
        <includeCallerData>${include.caller.data}</includeCallerData>
        <neverBlock>${never.block}</neverBlock>
        <appender-ref ref="MONITOR-APPENDER"/>
    </appender>

    <!-- wf 日志 -->
    <appender name="ERROR-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logBasePath}/${appname}.log.wf</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logBasePath}/${appname}.log.wf.%d{${dateFormat}}</fileNamePattern>
            <MaxHistory>${max.history}</MaxHistory>
            <totalSizeCap>${total.size.cap}</totalSizeCap>
        </rollingPolicy>
        <encoder charset="UTF-8">
            <Pattern>%prefix %X{traceid} %X{traceUrl} %X{rpcid} %X{logid} pRpcid[%X{pRpcid}] %X{url}
                %caller{${caller.depth}} %ex{${ex.depth}} %.-1048000m \n
            </Pattern>
            　　　　　　
        </encoder>
    </appender>

    <appender name="ASYNC-ERROR-APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>${discarding.threshold}</discardingThreshold>
        <queueSize>${queue.size}</queueSize>
        <includeCallerData>${include.caller.data}</includeCallerData>
        <neverBlock>${never.block}</neverBlock>
        <appender-ref ref="ERROR-APPENDER"/>
    </appender>

    <!-- notice 日志 -->
    <appender name="NOTICE-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logBasePath}/${appname}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logBasePath}/${appname}.log.%d{${dateFormat}}</fileNamePattern>
            <MaxHistory>${max.history}</MaxHistory>
            <totalSizeCap>${total.size.cap}</totalSizeCap>
        </rollingPolicy>
        <encoder charset="UTF-8">
            <Pattern>%.-1048000m \n</Pattern>
            　　　　　　
        </encoder>
    </appender>

    <appender name="ASYNC-NOTICE-APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>${discarding.threshold}</discardingThreshold>
        <queueSize>${queue.size}</queueSize>
        <includeCallerData>${include.caller.data}</includeCallerData>
        <neverBlock>${never.block}</neverBlock>
        <appender-ref ref="NOTICE-APPENDER"/>
    </appender>

    <logger name="com.missfresh.as.log.filter.NoticeFilter" level="INFO" additivity="false">
        <appender-ref ref="ASYNC-NOTICE-APPENDER"/>
    </logger>

    <logger name="com.missfresh.as.log.filter.NoticeFilterDubbo" level="INFO" additivity="false">
        <appender-ref ref="ASYNC-NOTICE-APPENDER"/>
    </logger>
    <logger name="com.missfresh.as.log.filter.NoticeFilterSpringBoot" level="INFO" additivity="false">
        <appender-ref ref="ASYNC-NOTICE-APPENDER"/>
    </logger>
    <logger name="com.missfresh.as.log.monitor.MonitorLogInterceptor" level="INFO" additivity="false">
        <appender-ref ref="ASYNC-MONITOR-APPENDER"/>
    </logger>

    <logger name="com.missfresh.as.log.monitor.DubboMonitorLogConsumerFilter" level="INFO" additivity="false">
        <appender-ref ref="ASYNC-MONITOR-APPENDER"/>
    </logger>
    <logger name="com.missfresh.as.log.monitor.DubboMonitorLogProviderFilter" level="INFO" additivity="false">
        <appender-ref ref="ASYNC-MONITOR-APPENDER"/>
    </logger>
    <logger name="com.missfresh.as.log.monitor.MonitorLogger" level="INFO" additivity="false">
        <appender-ref ref="ASYNC-MONITOR-APPENDER"/>
    </logger>
    <logger name="org.springframework.cache" level="ERROR"/>
    <logger name="com.zaxxer.hikari" level="ERROR"/>
    <logger name="org.apache.ibatis" level="ERROR"/>
    <logger name="com.alibaba.dubbo.rpc.protocol.http" level="ERROR"/>
    <logger name="org.eclipse.jetty" level="ERROR"/>

    <if condition='isNull("show.sql.mybatis.dao.path")'>
        <then>
        </then>
        <else>
            <logger name="com.ibatis" level="DEBUG"/>
            <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG"/>
            <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"/>
            <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG"/>
            <logger name="java.sql.Connection" level="DEBUG"/>
            <logger name="java.sql.Statement" level="DEBUG"/>
            <logger name="java.sql.PreparedStatement" level="DEBUG"/>
            <logger name="${show.sql.mybatis.dao.path}" level="DEBUG"/>
        </else>
    </if>


    <logger name="com.missfresh.risk.bcp" level="INFO"/>

    <root level="${log.level:-INFO}">
        <appender-ref ref="ASYNC-ERROR-APPENDER"/>
        <appender-ref ref="ASYNC-INFO-APPENDER"/>
        <appender-ref ref="ASYNC-DEBUG-APPENDER"/>
        <appender-ref ref="STDOUT"/>
    </root>


</configuration>
